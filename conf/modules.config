/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: SRATOOLS_PREFETCH {
        errorStrategy = 'ignore'
        maxForks = params.max_jobs_with_network_connections
    }

    withName: SRATOOLS_FASTERQDUMP {
        publishDir = [
            path: { "${params.outdir}" },
            mode: params.publish_dir_mode,
            pattern: 'reads/*.fastq.gz'
        ]
        def fasterq_rename = {String sample_name, String accession -> "--outfile ${sample_name}_${accession}"}
        def add_extension = {String sample_name, String accession -> "${sample_name}_${accession}"}

        ext.args = {
            [
                (meta.id && params.rename_with_samplename) ? fasterq_rename(meta.id, meta.insdc_accession) : ""
            ].join(" ")
        }
        ext.args2 = {
            [
                (meta.id && params.rename_with_samplename) ? add_extension(meta.id, meta.insdc_accession) : meta.insdc_accession
            ].join(" ")
        }
    }

    withName: FASTQ_DL {
        errorStrategy = 'ignore'
        maxForks = params.max_jobs_with_network_connections
        publishDir = [
            path: { "${params.outdir}" },
            mode: params.publish_dir_mode,
            pattern: 'reads/*.fastq.gz'
        ]
        def add_sample_name_prefix = {String sample_name -> "${sample_name}_"}

        ext.args2 = {
            (meta.id && params.rename_with_samplename) ? add_sample_name_prefix(meta.id) : ""
        }
    }
}
